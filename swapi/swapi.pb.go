// Code generated by protoc-gen-go. DO NOT EDIT.
// source: swapi/swapi.proto

package swapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FilmsRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilmsRequest) Reset()         { *m = FilmsRequest{} }
func (m *FilmsRequest) String() string { return proto.CompactTextString(m) }
func (*FilmsRequest) ProtoMessage()    {}
func (*FilmsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{0}
}

func (m *FilmsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilmsRequest.Unmarshal(m, b)
}
func (m *FilmsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilmsRequest.Marshal(b, m, deterministic)
}
func (m *FilmsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilmsRequest.Merge(m, src)
}
func (m *FilmsRequest) XXX_Size() int {
	return xxx_messageInfo_FilmsRequest.Size(m)
}
func (m *FilmsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilmsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilmsRequest proto.InternalMessageInfo

func (m *FilmsRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FilmsRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type Film struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	EpisodeId            string   `protobuf:"bytes,3,opt,name=episodeId,proto3" json:"episodeId,omitempty"`
	Director             string   `protobuf:"bytes,4,opt,name=director,proto3" json:"director,omitempty"`
	Producer             string   `protobuf:"bytes,5,opt,name=producer,proto3" json:"producer,omitempty"`
	Edited               string   `protobuf:"bytes,6,opt,name=edited,proto3" json:"edited,omitempty"`
	ReleaseDate          string   `protobuf:"bytes,7,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	Url                  string   `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	OpeningCrawl         string   `protobuf:"bytes,9,opt,name=openingCrawl,proto3" json:"openingCrawl,omitempty"`
	Characters           []int32  `protobuf:"varint,10,rep,packed,name=characters,proto3" json:"characters,omitempty"`
	Planets              []int32  `protobuf:"varint,11,rep,packed,name=planets,proto3" json:"planets,omitempty"`
	Species              []int32  `protobuf:"varint,12,rep,packed,name=species,proto3" json:"species,omitempty"`
	Starships            []int32  `protobuf:"varint,13,rep,packed,name=starships,proto3" json:"starships,omitempty"`
	Vehicles             []int32  `protobuf:"varint,14,rep,packed,name=vehicles,proto3" json:"vehicles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Film) Reset()         { *m = Film{} }
func (m *Film) String() string { return proto.CompactTextString(m) }
func (*Film) ProtoMessage()    {}
func (*Film) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{1}
}

func (m *Film) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Film.Unmarshal(m, b)
}
func (m *Film) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Film.Marshal(b, m, deterministic)
}
func (m *Film) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Film.Merge(m, src)
}
func (m *Film) XXX_Size() int {
	return xxx_messageInfo_Film.Size(m)
}
func (m *Film) XXX_DiscardUnknown() {
	xxx_messageInfo_Film.DiscardUnknown(m)
}

var xxx_messageInfo_Film proto.InternalMessageInfo

func (m *Film) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Film) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Film) GetEpisodeId() string {
	if m != nil {
		return m.EpisodeId
	}
	return ""
}

func (m *Film) GetDirector() string {
	if m != nil {
		return m.Director
	}
	return ""
}

func (m *Film) GetProducer() string {
	if m != nil {
		return m.Producer
	}
	return ""
}

func (m *Film) GetEdited() string {
	if m != nil {
		return m.Edited
	}
	return ""
}

func (m *Film) GetReleaseDate() string {
	if m != nil {
		return m.ReleaseDate
	}
	return ""
}

func (m *Film) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Film) GetOpeningCrawl() string {
	if m != nil {
		return m.OpeningCrawl
	}
	return ""
}

func (m *Film) GetCharacters() []int32 {
	if m != nil {
		return m.Characters
	}
	return nil
}

func (m *Film) GetPlanets() []int32 {
	if m != nil {
		return m.Planets
	}
	return nil
}

func (m *Film) GetSpecies() []int32 {
	if m != nil {
		return m.Species
	}
	return nil
}

func (m *Film) GetStarships() []int32 {
	if m != nil {
		return m.Starships
	}
	return nil
}

func (m *Film) GetVehicles() []int32 {
	if m != nil {
		return m.Vehicles
	}
	return nil
}

type FilmsReply struct {
	Films                []*Film  `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilmsReply) Reset()         { *m = FilmsReply{} }
func (m *FilmsReply) String() string { return proto.CompactTextString(m) }
func (*FilmsReply) ProtoMessage()    {}
func (*FilmsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{2}
}

func (m *FilmsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilmsReply.Unmarshal(m, b)
}
func (m *FilmsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilmsReply.Marshal(b, m, deterministic)
}
func (m *FilmsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilmsReply.Merge(m, src)
}
func (m *FilmsReply) XXX_Size() int {
	return xxx_messageInfo_FilmsReply.Size(m)
}
func (m *FilmsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FilmsReply.DiscardUnknown(m)
}

var xxx_messageInfo_FilmsReply proto.InternalMessageInfo

func (m *FilmsReply) GetFilms() []*Film {
	if m != nil {
		return m.Films
	}
	return nil
}

type PeopleRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeopleRequest) Reset()         { *m = PeopleRequest{} }
func (m *PeopleRequest) String() string { return proto.CompactTextString(m) }
func (*PeopleRequest) ProtoMessage()    {}
func (*PeopleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{3}
}

func (m *PeopleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeopleRequest.Unmarshal(m, b)
}
func (m *PeopleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeopleRequest.Marshal(b, m, deterministic)
}
func (m *PeopleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeopleRequest.Merge(m, src)
}
func (m *PeopleRequest) XXX_Size() int {
	return xxx_messageInfo_PeopleRequest.Size(m)
}
func (m *PeopleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeopleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeopleRequest proto.InternalMessageInfo

func (m *PeopleRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PeopleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Person struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BirthYear            string   `protobuf:"bytes,3,opt,name=birth_year,json=birthYear,proto3" json:"birth_year,omitempty"`
	Gender               string   `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	EyeColor             string   `protobuf:"bytes,5,opt,name=eye_color,json=eyeColor,proto3" json:"eye_color,omitempty"`
	HairColor            string   `protobuf:"bytes,6,opt,name=hair_color,json=hairColor,proto3" json:"hair_color,omitempty"`
	SkinColor            string   `protobuf:"bytes,7,opt,name=skin_color,json=skinColor,proto3" json:"skin_color,omitempty"`
	Height               string   `protobuf:"bytes,8,opt,name=height,proto3" json:"height,omitempty"`
	Mass                 string   `protobuf:"bytes,9,opt,name=mass,proto3" json:"mass,omitempty"`
	Homeworld            int32    `protobuf:"varint,10,opt,name=homeworld,proto3" json:"homeworld,omitempty"`
	Url                  string   `protobuf:"bytes,11,opt,name=url,proto3" json:"url,omitempty"`
	Created              string   `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	Edited               string   `protobuf:"bytes,13,opt,name=edited,proto3" json:"edited,omitempty"`
	Films                []int32  `protobuf:"varint,14,rep,packed,name=films,proto3" json:"films,omitempty"`
	Starships            []int32  `protobuf:"varint,15,rep,packed,name=starships,proto3" json:"starships,omitempty"`
	Species              []int32  `protobuf:"varint,16,rep,packed,name=species,proto3" json:"species,omitempty"`
	Vehicles             []int32  `protobuf:"varint,17,rep,packed,name=vehicles,proto3" json:"vehicles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{4}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetBirthYear() string {
	if m != nil {
		return m.BirthYear
	}
	return ""
}

func (m *Person) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Person) GetEyeColor() string {
	if m != nil {
		return m.EyeColor
	}
	return ""
}

func (m *Person) GetHairColor() string {
	if m != nil {
		return m.HairColor
	}
	return ""
}

func (m *Person) GetSkinColor() string {
	if m != nil {
		return m.SkinColor
	}
	return ""
}

func (m *Person) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

func (m *Person) GetMass() string {
	if m != nil {
		return m.Mass
	}
	return ""
}

func (m *Person) GetHomeworld() int32 {
	if m != nil {
		return m.Homeworld
	}
	return 0
}

func (m *Person) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Person) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Person) GetEdited() string {
	if m != nil {
		return m.Edited
	}
	return ""
}

func (m *Person) GetFilms() []int32 {
	if m != nil {
		return m.Films
	}
	return nil
}

func (m *Person) GetStarships() []int32 {
	if m != nil {
		return m.Starships
	}
	return nil
}

func (m *Person) GetSpecies() []int32 {
	if m != nil {
		return m.Species
	}
	return nil
}

func (m *Person) GetVehicles() []int32 {
	if m != nil {
		return m.Vehicles
	}
	return nil
}

type PeopleReply struct {
	People               []*Person `protobuf:"bytes,1,rep,name=people,proto3" json:"people,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PeopleReply) Reset()         { *m = PeopleReply{} }
func (m *PeopleReply) String() string { return proto.CompactTextString(m) }
func (*PeopleReply) ProtoMessage()    {}
func (*PeopleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{5}
}

func (m *PeopleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeopleReply.Unmarshal(m, b)
}
func (m *PeopleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeopleReply.Marshal(b, m, deterministic)
}
func (m *PeopleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeopleReply.Merge(m, src)
}
func (m *PeopleReply) XXX_Size() int {
	return xxx_messageInfo_PeopleReply.Size(m)
}
func (m *PeopleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PeopleReply.DiscardUnknown(m)
}

var xxx_messageInfo_PeopleReply proto.InternalMessageInfo

func (m *PeopleReply) GetPeople() []*Person {
	if m != nil {
		return m.People
	}
	return nil
}

type PlanetsRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlanetsRequest) Reset()         { *m = PlanetsRequest{} }
func (m *PlanetsRequest) String() string { return proto.CompactTextString(m) }
func (*PlanetsRequest) ProtoMessage()    {}
func (*PlanetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{6}
}

func (m *PlanetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanetsRequest.Unmarshal(m, b)
}
func (m *PlanetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanetsRequest.Marshal(b, m, deterministic)
}
func (m *PlanetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanetsRequest.Merge(m, src)
}
func (m *PlanetsRequest) XXX_Size() int {
	return xxx_messageInfo_PlanetsRequest.Size(m)
}
func (m *PlanetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlanetsRequest proto.InternalMessageInfo

func (m *PlanetsRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlanetsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Planet struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Population           string   `protobuf:"bytes,3,opt,name=population,proto3" json:"population,omitempty"`
	Diameter             string   `protobuf:"bytes,4,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Gravity              string   `protobuf:"bytes,5,opt,name=gravity,proto3" json:"gravity,omitempty"`
	Climate              string   `protobuf:"bytes,6,opt,name=climate,proto3" json:"climate,omitempty"`
	Terrain              string   `protobuf:"bytes,7,opt,name=terrain,proto3" json:"terrain,omitempty"`
	RotationPeriod       string   `protobuf:"bytes,8,opt,name=rotation_period,json=rotationPeriod,proto3" json:"rotation_period,omitempty"`
	OrbitalPeriod        string   `protobuf:"bytes,9,opt,name=orbital_period,json=orbitalPeriod,proto3" json:"orbital_period,omitempty"`
	SurfaceWater         string   `protobuf:"bytes,10,opt,name=surface_water,json=surfaceWater,proto3" json:"surface_water,omitempty"`
	Url                  string   `protobuf:"bytes,11,opt,name=url,proto3" json:"url,omitempty"`
	Created              string   `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	Edited               string   `protobuf:"bytes,13,opt,name=edited,proto3" json:"edited,omitempty"`
	Residents            []int32  `protobuf:"varint,14,rep,packed,name=residents,proto3" json:"residents,omitempty"`
	Films                []int32  `protobuf:"varint,15,rep,packed,name=films,proto3" json:"films,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Planet) Reset()         { *m = Planet{} }
func (m *Planet) String() string { return proto.CompactTextString(m) }
func (*Planet) ProtoMessage()    {}
func (*Planet) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{7}
}

func (m *Planet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Planet.Unmarshal(m, b)
}
func (m *Planet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Planet.Marshal(b, m, deterministic)
}
func (m *Planet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Planet.Merge(m, src)
}
func (m *Planet) XXX_Size() int {
	return xxx_messageInfo_Planet.Size(m)
}
func (m *Planet) XXX_DiscardUnknown() {
	xxx_messageInfo_Planet.DiscardUnknown(m)
}

var xxx_messageInfo_Planet proto.InternalMessageInfo

func (m *Planet) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Planet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Planet) GetPopulation() string {
	if m != nil {
		return m.Population
	}
	return ""
}

func (m *Planet) GetDiameter() string {
	if m != nil {
		return m.Diameter
	}
	return ""
}

func (m *Planet) GetGravity() string {
	if m != nil {
		return m.Gravity
	}
	return ""
}

func (m *Planet) GetClimate() string {
	if m != nil {
		return m.Climate
	}
	return ""
}

func (m *Planet) GetTerrain() string {
	if m != nil {
		return m.Terrain
	}
	return ""
}

func (m *Planet) GetRotationPeriod() string {
	if m != nil {
		return m.RotationPeriod
	}
	return ""
}

func (m *Planet) GetOrbitalPeriod() string {
	if m != nil {
		return m.OrbitalPeriod
	}
	return ""
}

func (m *Planet) GetSurfaceWater() string {
	if m != nil {
		return m.SurfaceWater
	}
	return ""
}

func (m *Planet) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Planet) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Planet) GetEdited() string {
	if m != nil {
		return m.Edited
	}
	return ""
}

func (m *Planet) GetResidents() []int32 {
	if m != nil {
		return m.Residents
	}
	return nil
}

func (m *Planet) GetFilms() []int32 {
	if m != nil {
		return m.Films
	}
	return nil
}

type PlanetsReply struct {
	Planets              []*Planet `protobuf:"bytes,1,rep,name=planets,proto3" json:"planets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PlanetsReply) Reset()         { *m = PlanetsReply{} }
func (m *PlanetsReply) String() string { return proto.CompactTextString(m) }
func (*PlanetsReply) ProtoMessage()    {}
func (*PlanetsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{8}
}

func (m *PlanetsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanetsReply.Unmarshal(m, b)
}
func (m *PlanetsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanetsReply.Marshal(b, m, deterministic)
}
func (m *PlanetsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanetsReply.Merge(m, src)
}
func (m *PlanetsReply) XXX_Size() int {
	return xxx_messageInfo_PlanetsReply.Size(m)
}
func (m *PlanetsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanetsReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlanetsReply proto.InternalMessageInfo

func (m *PlanetsReply) GetPlanets() []*Planet {
	if m != nil {
		return m.Planets
	}
	return nil
}

type SpeciesRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpeciesRequest) Reset()         { *m = SpeciesRequest{} }
func (m *SpeciesRequest) String() string { return proto.CompactTextString(m) }
func (*SpeciesRequest) ProtoMessage()    {}
func (*SpeciesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{9}
}

func (m *SpeciesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeciesRequest.Unmarshal(m, b)
}
func (m *SpeciesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeciesRequest.Marshal(b, m, deterministic)
}
func (m *SpeciesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeciesRequest.Merge(m, src)
}
func (m *SpeciesRequest) XXX_Size() int {
	return xxx_messageInfo_SpeciesRequest.Size(m)
}
func (m *SpeciesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeciesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpeciesRequest proto.InternalMessageInfo

func (m *SpeciesRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SpeciesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Species struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Classification       string   `protobuf:"bytes,3,opt,name=classification,proto3" json:"classification,omitempty"`
	Designation          string   `protobuf:"bytes,4,opt,name=designation,proto3" json:"designation,omitempty"`
	AverageHeight        string   `protobuf:"bytes,5,opt,name=average_height,json=averageHeight,proto3" json:"average_height,omitempty"`
	AverageLifespan      string   `protobuf:"bytes,6,opt,name=average_lifespan,json=averageLifespan,proto3" json:"average_lifespan,omitempty"`
	EyeColors            string   `protobuf:"bytes,7,opt,name=eye_colors,json=eyeColors,proto3" json:"eye_colors,omitempty"`
	HairColors           string   `protobuf:"bytes,8,opt,name=hair_colors,json=hairColors,proto3" json:"hair_colors,omitempty"`
	SkinColors           string   `protobuf:"bytes,9,opt,name=skin_colors,json=skinColors,proto3" json:"skin_colors,omitempty"`
	Language             string   `protobuf:"bytes,10,opt,name=language,proto3" json:"language,omitempty"`
	Homeworld            int32    `protobuf:"varint,11,opt,name=homeworld,proto3" json:"homeworld,omitempty"`
	Url                  string   `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`
	Created              string   `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Edited               string   `protobuf:"bytes,14,opt,name=edited,proto3" json:"edited,omitempty"`
	People               []int32  `protobuf:"varint,15,rep,packed,name=people,proto3" json:"people,omitempty"`
	Films                []int32  `protobuf:"varint,16,rep,packed,name=films,proto3" json:"films,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Species) Reset()         { *m = Species{} }
func (m *Species) String() string { return proto.CompactTextString(m) }
func (*Species) ProtoMessage()    {}
func (*Species) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{10}
}

func (m *Species) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Species.Unmarshal(m, b)
}
func (m *Species) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Species.Marshal(b, m, deterministic)
}
func (m *Species) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Species.Merge(m, src)
}
func (m *Species) XXX_Size() int {
	return xxx_messageInfo_Species.Size(m)
}
func (m *Species) XXX_DiscardUnknown() {
	xxx_messageInfo_Species.DiscardUnknown(m)
}

var xxx_messageInfo_Species proto.InternalMessageInfo

func (m *Species) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Species) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Species) GetClassification() string {
	if m != nil {
		return m.Classification
	}
	return ""
}

func (m *Species) GetDesignation() string {
	if m != nil {
		return m.Designation
	}
	return ""
}

func (m *Species) GetAverageHeight() string {
	if m != nil {
		return m.AverageHeight
	}
	return ""
}

func (m *Species) GetAverageLifespan() string {
	if m != nil {
		return m.AverageLifespan
	}
	return ""
}

func (m *Species) GetEyeColors() string {
	if m != nil {
		return m.EyeColors
	}
	return ""
}

func (m *Species) GetHairColors() string {
	if m != nil {
		return m.HairColors
	}
	return ""
}

func (m *Species) GetSkinColors() string {
	if m != nil {
		return m.SkinColors
	}
	return ""
}

func (m *Species) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Species) GetHomeworld() int32 {
	if m != nil {
		return m.Homeworld
	}
	return 0
}

func (m *Species) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Species) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Species) GetEdited() string {
	if m != nil {
		return m.Edited
	}
	return ""
}

func (m *Species) GetPeople() []int32 {
	if m != nil {
		return m.People
	}
	return nil
}

func (m *Species) GetFilms() []int32 {
	if m != nil {
		return m.Films
	}
	return nil
}

type SpeciesReply struct {
	Species              []*Species `protobuf:"bytes,1,rep,name=species,proto3" json:"species,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SpeciesReply) Reset()         { *m = SpeciesReply{} }
func (m *SpeciesReply) String() string { return proto.CompactTextString(m) }
func (*SpeciesReply) ProtoMessage()    {}
func (*SpeciesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd15ecd993b2bac6, []int{11}
}

func (m *SpeciesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeciesReply.Unmarshal(m, b)
}
func (m *SpeciesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeciesReply.Marshal(b, m, deterministic)
}
func (m *SpeciesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeciesReply.Merge(m, src)
}
func (m *SpeciesReply) XXX_Size() int {
	return xxx_messageInfo_SpeciesReply.Size(m)
}
func (m *SpeciesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeciesReply.DiscardUnknown(m)
}

var xxx_messageInfo_SpeciesReply proto.InternalMessageInfo

func (m *SpeciesReply) GetSpecies() []*Species {
	if m != nil {
		return m.Species
	}
	return nil
}

func init() {
	proto.RegisterType((*FilmsRequest)(nil), "swapi.FilmsRequest")
	proto.RegisterType((*Film)(nil), "swapi.Film")
	proto.RegisterType((*FilmsReply)(nil), "swapi.FilmsReply")
	proto.RegisterType((*PeopleRequest)(nil), "swapi.PeopleRequest")
	proto.RegisterType((*Person)(nil), "swapi.Person")
	proto.RegisterType((*PeopleReply)(nil), "swapi.PeopleReply")
	proto.RegisterType((*PlanetsRequest)(nil), "swapi.PlanetsRequest")
	proto.RegisterType((*Planet)(nil), "swapi.Planet")
	proto.RegisterType((*PlanetsReply)(nil), "swapi.PlanetsReply")
	proto.RegisterType((*SpeciesRequest)(nil), "swapi.SpeciesRequest")
	proto.RegisterType((*Species)(nil), "swapi.Species")
	proto.RegisterType((*SpeciesReply)(nil), "swapi.SpeciesReply")
}

func init() { proto.RegisterFile("swapi/swapi.proto", fileDescriptor_cd15ecd993b2bac6) }

var fileDescriptor_cd15ecd993b2bac6 = []byte{
	// 914 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0xcb, 0x6e, 0x1b, 0x37,
	0x18, 0x85, 0x23, 0xcb, 0x92, 0xa2, 0x5f, 0x17, 0xdb, 0x4c, 0x62, 0x10, 0x6e, 0x9a, 0xaa, 0x53,
	0xa4, 0x51, 0x37, 0x09, 0x9a, 0x18, 0x48, 0xf7, 0x29, 0x8a, 0x16, 0xe8, 0xc2, 0x50, 0x17, 0x45,
	0x57, 0x02, 0x3d, 0xf3, 0x5b, 0x22, 0x4a, 0x0d, 0x59, 0x92, 0xb2, 0xa1, 0x5d, 0xdf, 0xa5, 0xef,
	0xd0, 0x47, 0xe9, 0x03, 0xf4, 0x49, 0x0a, 0xde, 0xe6, 0x86, 0x1a, 0x70, 0x80, 0x6c, 0x8c, 0xf9,
	0xcf, 0x21, 0xad, 0x99, 0x39, 0xdf, 0x9c, 0x19, 0x38, 0x33, 0x77, 0x4c, 0xf1, 0x37, 0xfe, 0xef,
	0x6b, 0xa5, 0xa5, 0x95, 0x64, 0xe0, 0x87, 0xec, 0x12, 0xa6, 0x3f, 0x70, 0xb1, 0x33, 0x2b, 0xfc,
	0x63, 0x8f, 0xc6, 0x92, 0x39, 0x1c, 0xf1, 0x82, 0xf6, 0x16, 0xbd, 0xe5, 0x60, 0x75, 0xc4, 0x0b,
	0xf2, 0x14, 0x06, 0x96, 0x5b, 0x81, 0xf4, 0x68, 0xd1, 0x5b, 0x8e, 0x57, 0x61, 0xc8, 0xfe, 0xec,
	0xc3, 0xb1, 0xdb, 0xf6, 0xb0, 0xe5, 0xe4, 0x39, 0x8c, 0x51, 0x71, 0x23, 0x0b, 0xfc, 0xa9, 0xa0,
	0x7d, 0xef, 0xd4, 0x02, 0xb9, 0x80, 0xc7, 0x05, 0xd7, 0x98, 0x5b, 0xa9, 0xe9, 0xb1, 0x37, 0xab,
	0xd9, 0x79, 0x4a, 0xcb, 0x62, 0x9f, 0xa3, 0xa6, 0x83, 0xe0, 0xa5, 0x99, 0x9c, 0xc3, 0x10, 0x0b,
	0x6e, 0xb1, 0xa0, 0x43, 0xef, 0xc4, 0x89, 0x2c, 0x60, 0xa2, 0x51, 0x20, 0x33, 0xf8, 0x3d, 0xb3,
	0x48, 0x47, 0xde, 0x6c, 0x4a, 0xe4, 0x14, 0xfa, 0x7b, 0x2d, 0xe8, 0x63, 0xef, 0xb8, 0x43, 0x92,
	0xc1, 0x54, 0x2a, 0x2c, 0x79, 0xb9, 0xf9, 0xa0, 0xd9, 0x9d, 0xa0, 0x63, 0x6f, 0xb5, 0x34, 0xf2,
	0x02, 0x20, 0xdf, 0x32, 0xcd, 0x72, 0x8b, 0xda, 0x50, 0x58, 0xf4, 0x97, 0x83, 0x55, 0x43, 0x21,
	0x14, 0x46, 0x4a, 0xb0, 0x12, 0xad, 0xa1, 0x13, 0x6f, 0xa6, 0xd1, 0x39, 0x46, 0x61, 0xce, 0xd1,
	0xd0, 0x69, 0x70, 0xe2, 0xe8, 0xee, 0x8c, 0xb1, 0x4c, 0x9b, 0x2d, 0x57, 0x86, 0xce, 0xbc, 0x57,
	0x0b, 0xee, 0xea, 0x6f, 0x71, 0xcb, 0x73, 0x81, 0x86, 0xce, 0xbd, 0x59, 0xcd, 0xd9, 0x1b, 0x80,
	0x18, 0x9c, 0x12, 0x07, 0xf2, 0x25, 0x0c, 0x6e, 0xdc, 0x44, 0x7b, 0x8b, 0xfe, 0x72, 0xf2, 0x76,
	0xf2, 0x3a, 0x44, 0xed, 0x56, 0xac, 0x82, 0x93, 0xbd, 0x83, 0xd9, 0x15, 0x4a, 0x25, 0xf0, 0xbe,
	0xa8, 0x09, 0x1c, 0x97, 0x6c, 0x97, 0xa2, 0xf3, 0xc7, 0xd9, 0xdf, 0x7d, 0x18, 0x5e, 0xa1, 0x36,
	0xb2, 0x7c, 0xc8, 0x72, 0xf2, 0x39, 0xc0, 0x35, 0xd7, 0x76, 0xbb, 0x3e, 0x20, 0xd3, 0x29, 0x69,
	0xaf, 0xfc, 0x86, 0xcc, 0x27, 0xb6, 0xc1, 0xb2, 0xc0, 0x94, 0x73, 0x9c, 0xc8, 0x67, 0x30, 0xc6,
	0x03, 0xae, 0x73, 0x29, 0x64, 0x15, 0x33, 0x1e, 0xf0, 0x83, 0x9b, 0xdd, 0xff, 0xdc, 0x32, 0xae,
	0xa3, 0x1b, 0xa2, 0x1e, 0x3b, 0xa5, 0xb2, 0xcd, 0xef, 0xbc, 0x8c, 0x76, 0x08, 0x7b, 0xec, 0x94,
	0x60, 0x9f, 0xc3, 0x70, 0x8b, 0x7c, 0xb3, 0xb5, 0x31, 0xed, 0x38, 0xb9, 0xb3, 0xdf, 0x31, 0x63,
	0x62, 0xd0, 0xfe, 0xd8, 0x85, 0xb1, 0x95, 0x3b, 0xbc, 0x93, 0x5a, 0x14, 0x14, 0xfc, 0x85, 0xd6,
	0x42, 0x82, 0x66, 0x52, 0x43, 0x43, 0x61, 0x94, 0x6b, 0x64, 0x8e, 0xc0, 0xa9, 0x57, 0xd3, 0xd8,
	0x40, 0x73, 0xd6, 0x42, 0xf3, 0x69, 0x8a, 0x29, 0xa4, 0x19, 0x86, 0x36, 0x04, 0x27, 0x5d, 0x08,
	0x1a, 0xf0, 0x9c, 0xb6, 0xe1, 0x69, 0xe2, 0x71, 0xd6, 0xc1, 0xe3, 0x12, 0x26, 0x29, 0x6d, 0xc7,
	0xc7, 0x4b, 0x18, 0x2a, 0x3f, 0x46, 0x40, 0x66, 0x11, 0x90, 0x90, 0xed, 0x2a, 0x9a, 0xd9, 0x25,
	0xcc, 0xaf, 0x02, 0xb3, 0x1f, 0x03, 0xc9, 0x5f, 0x0e, 0x12, 0xbf, 0xed, 0x41, 0x90, 0xbc, 0x00,
	0x50, 0x52, 0xed, 0x05, 0xb3, 0x5c, 0x96, 0x11, 0x92, 0x86, 0x12, 0xfa, 0x80, 0xed, 0xd0, 0x62,
	0xa3, 0x0f, 0xc2, 0xec, 0x6e, 0xc6, 0x46, 0xb3, 0x5b, 0x6e, 0x0f, 0x91, 0x93, 0x34, 0xfa, 0x30,
	0x04, 0xdf, 0xb9, 0x27, 0x7e, 0x18, 0xc3, 0x08, 0xa3, 0x73, 0x2c, 0x6a, 0xcd, 0x78, 0x19, 0xf1,
	0x48, 0x23, 0x79, 0x05, 0x27, 0x5a, 0x5a, 0xff, 0xab, 0x6b, 0x85, 0x9a, 0xcb, 0x22, 0x52, 0x32,
	0x4f, 0xf2, 0x95, 0x57, 0xc9, 0x4b, 0x98, 0x4b, 0x7d, 0xcd, 0x2d, 0x13, 0x69, 0x5d, 0xe0, 0x66,
	0x16, 0xd5, 0xb8, 0xec, 0x2b, 0x98, 0x99, 0xbd, 0xbe, 0x61, 0x39, 0xae, 0xef, 0x98, 0x3b, 0x7d,
	0x08, 0x35, 0x12, 0xc5, 0x5f, 0x9d, 0xf6, 0x49, 0x38, 0x7a, 0x0e, 0x63, 0x8d, 0x86, 0x17, 0x58,
	0xda, 0xc4, 0x52, 0x2d, 0xd4, 0x94, 0x9d, 0x34, 0x28, 0xcb, 0xde, 0xc3, 0xb4, 0xca, 0xd6, 0x21,
	0xf1, 0xaa, 0xae, 0xab, 0x0e, 0x13, 0x5e, 0xad, 0xda, 0xcb, 0x41, 0xf1, 0x4b, 0x20, 0xee, 0x63,
	0xa0, 0xf8, 0xa7, 0x0f, 0xa3, 0xb8, 0xed, 0x41, 0x54, 0x7c, 0x0d, 0xf3, 0x5c, 0x30, 0x63, 0xf8,
	0x0d, 0xcf, 0x9b, 0x64, 0x74, 0x54, 0xd7, 0xee, 0x05, 0x1a, 0xbe, 0x29, 0xc3, 0xa2, 0x00, 0x48,
	0x53, 0x72, 0x61, 0xb1, 0x5b, 0xd4, 0x6c, 0x83, 0xeb, 0xf8, 0xe8, 0x07, 0x54, 0x66, 0x51, 0xfd,
	0x31, 0x34, 0xc0, 0x37, 0x70, 0x9a, 0x96, 0x09, 0x7e, 0x83, 0x46, 0xb1, 0x32, 0x92, 0x73, 0x12,
	0xf5, 0x9f, 0xa3, 0xec, 0x3a, 0xa6, 0xea, 0x27, 0x93, 0x3a, 0x26, 0x15, 0x94, 0x21, 0x5f, 0xc0,
	0xa4, 0x6e, 0x28, 0x13, 0x11, 0x82, 0xaa, 0xa2, 0xfc, 0x82, 0xba, 0xa3, 0x52, 0xe7, 0x40, 0x55,
	0x52, 0xfe, 0x49, 0x16, 0xac, 0xdc, 0xec, 0xd9, 0x06, 0x23, 0x33, 0xd5, 0xdc, 0x6e, 0xa5, 0xc9,
	0x3d, 0xad, 0x34, 0xfd, 0x5f, 0x9a, 0x66, 0xf7, 0xd1, 0x34, 0x6f, 0xd1, 0x74, 0x5e, 0x95, 0x43,
	0x00, 0x26, 0x4e, 0x35, 0x47, 0xa7, 0x4d, 0x8e, 0xbe, 0x83, 0x69, 0x85, 0x83, 0xe3, 0x68, 0x59,
	0xf7, 0x53, 0xe0, 0x68, 0x1e, 0x39, 0x4a, 0xab, 0x92, 0xfd, 0xf6, 0xdf, 0x1e, 0x84, 0xaf, 0x0e,
	0xf2, 0x2d, 0x0c, 0xfc, 0xcb, 0x8b, 0x3c, 0x69, 0xbc, 0xa8, 0x12, 0x5e, 0x17, 0x67, 0x6d, 0x51,
	0x89, 0x43, 0xf6, 0x88, 0x5c, 0xba, 0x17, 0x51, 0x38, 0xad, 0xaa, 0xbb, 0x1a, 0x6f, 0xb3, 0x0b,
	0xd2, 0x51, 0xc3, 0xae, 0xf7, 0x30, 0x8a, 0xd0, 0x93, 0x67, 0x2d, 0xbc, 0xab, 0x1f, 0x7b, 0xd2,
	0x95, 0xab, 0x8d, 0x89, 0xde, 0x67, 0x9d, 0xeb, 0xe9, 0x6c, 0x6c, 0xde, 0x8c, 0xec, 0xd1, 0xf5,
	0xd0, 0x7f, 0x5e, 0xbd, 0xfb, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xf6, 0x51, 0xd6, 0x73, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SwapiClient is the client API for Swapi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SwapiClient interface {
	Films(ctx context.Context, in *FilmsRequest, opts ...grpc.CallOption) (*FilmsReply, error)
	People(ctx context.Context, in *PeopleRequest, opts ...grpc.CallOption) (*PeopleReply, error)
	Planets(ctx context.Context, in *PlanetsRequest, opts ...grpc.CallOption) (*PlanetsReply, error)
	Species(ctx context.Context, in *SpeciesRequest, opts ...grpc.CallOption) (*SpeciesReply, error)
}

type swapiClient struct {
	cc *grpc.ClientConn
}

func NewSwapiClient(cc *grpc.ClientConn) SwapiClient {
	return &swapiClient{cc}
}

func (c *swapiClient) Films(ctx context.Context, in *FilmsRequest, opts ...grpc.CallOption) (*FilmsReply, error) {
	out := new(FilmsReply)
	err := c.cc.Invoke(ctx, "/swapi.swapi/Films", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapiClient) People(ctx context.Context, in *PeopleRequest, opts ...grpc.CallOption) (*PeopleReply, error) {
	out := new(PeopleReply)
	err := c.cc.Invoke(ctx, "/swapi.swapi/People", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapiClient) Planets(ctx context.Context, in *PlanetsRequest, opts ...grpc.CallOption) (*PlanetsReply, error) {
	out := new(PlanetsReply)
	err := c.cc.Invoke(ctx, "/swapi.swapi/Planets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapiClient) Species(ctx context.Context, in *SpeciesRequest, opts ...grpc.CallOption) (*SpeciesReply, error) {
	out := new(SpeciesReply)
	err := c.cc.Invoke(ctx, "/swapi.swapi/Species", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SwapiServer is the server API for Swapi service.
type SwapiServer interface {
	Films(context.Context, *FilmsRequest) (*FilmsReply, error)
	People(context.Context, *PeopleRequest) (*PeopleReply, error)
	Planets(context.Context, *PlanetsRequest) (*PlanetsReply, error)
	Species(context.Context, *SpeciesRequest) (*SpeciesReply, error)
}

func RegisterSwapiServer(s *grpc.Server, srv SwapiServer) {
	s.RegisterService(&_Swapi_serviceDesc, srv)
}

func _Swapi_Films_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapiServer).Films(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.swapi/Films",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapiServer).Films(ctx, req.(*FilmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swapi_People_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeopleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapiServer).People(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.swapi/People",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapiServer).People(ctx, req.(*PeopleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swapi_Planets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlanetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapiServer).Planets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.swapi/Planets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapiServer).Planets(ctx, req.(*PlanetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swapi_Species_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpeciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapiServer).Species(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.swapi/Species",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapiServer).Species(ctx, req.(*SpeciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Swapi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "swapi.swapi",
	HandlerType: (*SwapiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Films",
			Handler:    _Swapi_Films_Handler,
		},
		{
			MethodName: "People",
			Handler:    _Swapi_People_Handler,
		},
		{
			MethodName: "Planets",
			Handler:    _Swapi_Planets_Handler,
		},
		{
			MethodName: "Species",
			Handler:    _Swapi_Species_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "swapi/swapi.proto",
}
